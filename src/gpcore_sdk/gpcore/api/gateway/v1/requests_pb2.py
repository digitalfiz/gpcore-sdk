# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: gpcore/api/gateway/v1/requests.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 6, 31, 1, "", "gpcore/api/gateway/v1/requests.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gpcore_sdk.gpcore.api.cloud.v1 import (
    image_pb2 as gpcore_dot_api_dot_cloud_dot_v1_dot_image__pb2,
)


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n$gpcore/api/gateway/v1/requests.proto\x12\x15gpcore.api.gateway.v1\x1a\x1fgpcore/api/cloud/v1/image.proto"7\n\x1aImageUploadValidateRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t"\xc2\x01\n\x19ImageUploadConfirmRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x03\x12\x12\n\ncompressed\x18\x03 \x01(\x08\x12\x34\n\x08\x63hecksum\x18\x04 \x01(\x0b\x32".gpcore.api.cloud.v1.ImageChecksum\x12\r\n\x05token\x18\x05 \x01(\t\x12\x32\n\x04type\x18\x06 \x01(\x0e\x32$.gpcore.api.cloud.v1.ImageFormatTypeb\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "gpcore.api.gateway.v1.requests_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    DESCRIPTOR._loaded_options = None
    _globals["_IMAGEUPLOADVALIDATEREQUEST"]._serialized_start = 96
    _globals["_IMAGEUPLOADVALIDATEREQUEST"]._serialized_end = 151
    _globals["_IMAGEUPLOADCONFIRMREQUEST"]._serialized_start = 154
    _globals["_IMAGEUPLOADCONFIRMREQUEST"]._serialized_end = 348
# @@protoc_insertion_point(module_scope)
