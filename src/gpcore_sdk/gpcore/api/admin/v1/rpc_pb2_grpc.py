# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
import warnings

from gpcore_sdk.gpcore.api.admin.v1 import (
    requests_pb2 as gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2,
)
from gpcore_sdk.gpcore.api.admin.v1 import (
    responses_pb2 as gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2,
)

GRPC_GENERATED_VERSION = "1.74.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in gpcore/api/admin/v1/rpc_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListRegions = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListRegions",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListRegionsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListRegionsResponse.FromString,
            _registered_method=True,
        )
        self.GetRegion = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetRegion",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetRegionRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetRegionResponse.FromString,
            _registered_method=True,
        )
        self.UpdateDatacenter = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateDatacenter",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateDatacenterRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateDatacenterResponse.FromString,
            _registered_method=True,
        )
        self.ListAgents = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListAgents",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAgentsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAgentsResponse.FromString,
            _registered_method=True,
        )
        self.CreateAgent = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateAgent",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateAgentRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateAgentResponse.FromString,
            _registered_method=True,
        )
        self.DeleteAgent = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteAgent",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteAgentRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteAgentResponse.FromString,
            _registered_method=True,
        )
        self.ListServers = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListServers",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServersRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServersResponse.FromString,
            _registered_method=True,
        )
        self.SubscribeServerLogs = channel.unary_stream(
            "/gpcore.api.admin.v1.AdminService/SubscribeServerLogs",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.SubscribeServerLogsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.SubscribeServerLogsResponse.FromString,
            _registered_method=True,
        )
        self.GetServerSearchOptions = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetServerSearchOptions",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerSearchOptionsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerSearchOptionsResponse.FromString,
            _registered_method=True,
        )
        self.ImportServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ImportServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImportServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImportServerResponse.FromString,
            _registered_method=True,
        )
        self.GetServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerResponse.FromString,
            _registered_method=True,
        )
        self.UpdateServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateServerResponse.FromString,
            _registered_method=True,
        )
        self.UpdateNode = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateNode",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNodeResponse.FromString,
            _registered_method=True,
        )
        self.DestroyNode = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DestroyNode",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DestroyNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DestroyNodeResponse.FromString,
            _registered_method=True,
        )
        self.DeleteServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerResponse.FromString,
            _registered_method=True,
        )
        self.ReplaceServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ReplaceServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ReplaceServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ReplaceServerResponse.FromString,
            _registered_method=True,
        )
        self.ListServerLogs = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListServerLogs",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerLogsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerLogsResponse.FromString,
            _registered_method=True,
        )
        self.ListUsers = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListUsers",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListUsersRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListUsersResponse.FromString,
            _registered_method=True,
        )
        self.GetUser = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetUser",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserResponse.FromString,
            _registered_method=True,
        )
        self.UpdateUser = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateUser",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateUserResponse.FromString,
            _registered_method=True,
        )
        self.LockUser = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/LockUser",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LockUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LockUserResponse.FromString,
            _registered_method=True,
        )
        self.UnlockUser = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UnlockUser",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UnlockUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UnlockUserResponse.FromString,
            _registered_method=True,
        )
        self.GetUserStats = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetUserStats",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserStatsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserStatsResponse.FromString,
            _registered_method=True,
        )
        self.ImpersonateUser = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ImpersonateUser",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImpersonateUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImpersonateUserResponse.FromString,
            _registered_method=True,
        )
        self.GetServerPlatformManagement = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetServerPlatformManagement",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerPlatformManagementRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerPlatformManagementResponse.FromString,
            _registered_method=True,
        )
        self.ListAvailableServer = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListAvailableServer",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAvailableServerRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAvailableServerResponse.FromString,
            _registered_method=True,
        )
        self.TriggerServerAction = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/TriggerServerAction",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.TriggerServerActionRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.TriggerServerActionResponse.FromString,
            _registered_method=True,
        )
        self.CreateImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateImageResponse.FromString,
            _registered_method=True,
        )
        self.ListImages = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListImages",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListImagesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListImagesResponse.FromString,
            _registered_method=True,
        )
        self.GetImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetImageResponse.FromString,
            _registered_method=True,
        )
        self.UpdateImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateImageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteImageVersion = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteImageVersion",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageVersionRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageVersionResponse.FromString,
            _registered_method=True,
        )
        self.ListCloudProviderImages = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListCloudProviderImages",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListCloudProviderImagesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListCloudProviderImagesResponse.FromString,
            _registered_method=True,
        )
        self.AddCloudProviderImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/AddCloudProviderImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.AddCloudProviderImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.AddCloudProviderImageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteCloudProviderImage = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteCloudProviderImage",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteCloudProviderImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteCloudProviderImageResponse.FromString,
            _registered_method=True,
        )
        self.ListOperatingSystems = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListOperatingSystems",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListOperatingSystemsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListOperatingSystemsResponse.FromString,
            _registered_method=True,
        )
        self.DeleteOperatingSystem = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteOperatingSystem",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteOperatingSystemRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteOperatingSystemResponse.FromString,
            _registered_method=True,
        )
        self.CreateOperatingSystem = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateOperatingSystem",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateOperatingSystemRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateOperatingSystemResponse.FromString,
            _registered_method=True,
        )
        self.GetOperatingSystem = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetOperatingSystem",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetOperatingSystemRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetOperatingSystemResponse.FromString,
            _registered_method=True,
        )
        self.UpdateOperatingSystem = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateOperatingSystem",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateOperatingSystemRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateOperatingSystemResponse.FromString,
            _registered_method=True,
        )
        self.ListFlavours = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListFlavours",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListFlavoursRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListFlavoursResponse.FromString,
            _registered_method=True,
        )
        self.GetFlavour = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetFlavour",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetFlavourRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetFlavourResponse.FromString,
            _registered_method=True,
        )
        self.DeleteFlavour = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteFlavour",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteFlavourRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteFlavourResponse.FromString,
            _registered_method=True,
        )
        self.CreateFlavour = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateFlavour",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateFlavourRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateFlavourResponse.FromString,
            _registered_method=True,
        )
        self.UpdateFlavour = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateFlavour",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateFlavourRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateFlavourResponse.FromString,
            _registered_method=True,
        )
        self.ListSwitches = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListSwitches",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListSwitchesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListSwitchesResponse.FromString,
            _registered_method=True,
        )
        self.GetSwitch = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetSwitch",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSwitchRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSwitchResponse.FromString,
            _registered_method=True,
        )
        self.ListProjects = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListProjects",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectsResponse.FromString,
            _registered_method=True,
        )
        self.GetProject = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetProject",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetProjectResponse.FromString,
            _registered_method=True,
        )
        self.UpdateProject = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateProject",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateProjectResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectNodes = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListProjectNodes",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNodesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNodesResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectNetworks = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListProjectNetworks",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNetworksRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNetworksResponse.FromString,
            _registered_method=True,
        )
        self.CreateProjectNetwork = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateProjectNetwork",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateProjectNetworkRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateProjectNetworkResponse.FromString,
            _registered_method=True,
        )
        self.ListAdminLogs = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListAdminLogs",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAdminLogsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAdminLogsResponse.FromString,
            _registered_method=True,
        )
        self.GetSplaReporting = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetSplaReporting",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSplaReportingRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSplaReportingResponse.FromString,
            _registered_method=True,
        )
        self.ListIPHistories = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListIPHistories",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListIPHistoriesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListIPHistoriesResponse.FromString,
            _registered_method=True,
        )
        self.ListNetworks = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListNetworks",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListNetworksRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListNetworksResponse.FromString,
            _registered_method=True,
        )
        self.CreateNetwork = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateNetwork",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateNetworkRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateNetworkResponse.FromString,
            _registered_method=True,
        )
        self.DeleteNetwork = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteNetwork",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteNetworkRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteNetworkResponse.FromString,
            _registered_method=True,
        )
        self.GetNetwork = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetNetwork",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetNetworkRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetNetworkResponse.FromString,
            _registered_method=True,
        )
        self.UpdateNetwork = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateNetwork",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNetworkRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNetworkResponse.FromString,
            _registered_method=True,
        )
        self.DeleteSubnet = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteSubnet",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteSubnetRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteSubnetResponse.FromString,
            _registered_method=True,
        )
        self.CreateSubnet = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateSubnet",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateSubnetRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateSubnetResponse.FromString,
            _registered_method=True,
        )
        self.UpdateSubnet = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/UpdateSubnet",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateSubnetRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateSubnetResponse.FromString,
            _registered_method=True,
        )
        self.GetDashboard = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetDashboard",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetDashboardRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetDashboardResponse.FromString,
            _registered_method=True,
        )
        self.LookupARP = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/LookupARP",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LookupARPRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LookupARPResponse.FromString,
            _registered_method=True,
        )
        self.CreateServerPool = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/CreateServerPool",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateServerPoolRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateServerPoolResponse.FromString,
            _registered_method=True,
        )
        self.ListServerPools = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListServerPools",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerPoolsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerPoolsResponse.FromString,
            _registered_method=True,
        )
        self.DeleteServerPool = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/DeleteServerPool",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerPoolRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerPoolResponse.FromString,
            _registered_method=True,
        )
        self.ListArpEntries = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/ListArpEntries",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListArpEntriesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListArpEntriesResponse.FromString,
            _registered_method=True,
        )
        self.GetArpEntriesSearchOptions = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetArpEntriesSearchOptions",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetArpEntriesSearchOptionsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetArpEntriesSearchOptionsResponse.FromString,
            _registered_method=True,
        )
        self.GetUsageReporting = channel.unary_unary(
            "/gpcore.api.admin.v1.AdminService/GetUsageReporting",
            request_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUsageReportingRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUsageReportingResponse.FromString,
            _registered_method=True,
        )


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListRegions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRegion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateDatacenter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListAgents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListServers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SubscribeServerLogs(self, request, context):
        """SubscribeServerLogs returns a stream of server logs (real time updates).

        The stream also provides heartbeats in a interval of 5 seconds. If you
        don't receive any notification for more then 5 seconds, the connection
        should be reopened.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetServerSearchOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ImportServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DestroyNode(self, request, context):
        """Destroys a selected node immediately regardless of the current billing interval. This will remove the node from
        the server and the server will be available for new installations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReplaceServer(self, request, context):
        """To replace a server due several reasons like hardware failure, etc. the existing customer node can be replaced
        with a new server. This will replace the active node server with the new server.
        Note: This will also trigger a new installation of on the new server. If the existing data should be kept, a
        manual move of the disk needs to be performed after the installation has been processed by hands-on service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListServerLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LockUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UnlockUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ImpersonateUser(self, request, context):
        """Impersonates a given user account"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetServerPlatformManagement(self, request, context):
        """GetServerPlatformManagement Returns Platform Management data for server"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListAvailableServer(self, request, context):
        """List all available server from our Netbox Inventory"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TriggerServerAction(self, request, context):
        """Triggers a server action, see ServerAction enum for available actions"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateImage(self, request, context):
        """Create a new public image"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListImages(self, request, context):
        """List all public images"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetImage(self, request, context):
        """Return a single public image by ID"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateImage(self, request, context):
        """Updates a public image"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteImage(self, request, context):
        """Deletes a public image"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteImageVersion(self, request, context):
        """DeleteImageVersion Delete a project image version"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListCloudProviderImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AddCloudProviderImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteCloudProviderImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListOperatingSystems(self, request, context):
        """Lists all operating systems"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteOperatingSystem(self, request, context):
        """Delete a operating system"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateOperatingSystem(self, request, context):
        """Creates a new operating system"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOperatingSystem(self, request, context):
        """Get a single operating system"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateOperatingSystem(self, request, context):
        """Update a single operating system"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListFlavours(self, request, context):
        """List all existing flavours"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFlavour(self, request, context):
        """Return a single flavour"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteFlavour(self, request, context):
        """Delete a flavour"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateFlavour(self, request, context):
        """Create a new flavour"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateFlavour(self, request, context):
        """Update a existing flavour"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSwitches(self, request, context):
        """List all switches"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSwitch(self, request, context):
        """Get a single switch"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjects(self, request, context):
        """ListProjects list all available projects."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProject(self, request, context):
        """GetProject get a single project for a given project id."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateProject(self, request, context):
        """UpdateProject updates a project by its given fields."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectNodes(self, request, context):
        """List project nodes"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectNetworks(self, request, context):
        """List project specific networks"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateProjectNetwork(self, request, context):
        """Create a new project network"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListAdminLogs(self, request, context):
        """List admin logs"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSplaReporting(self, request, context):
        """Get SPLA reporting"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListIPHistories(self, request, context):
        """List IP histories"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListNetworks(self, request, context):
        """Lists all networks"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateNetwork(self, request, context):
        """Create new network"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteNetwork(self, request, context):
        """Delete a network"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetNetwork(self, request, context):
        """Get a single network"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateNetwork(self, request, context):
        """Updates a network"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteSubnet(self, request, context):
        """Delete a subnet"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateSubnet(self, request, context):
        """Create new subnet"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateSubnet(self, request, context):
        """Updates a subnet"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDashboard(self, request, context):
        """Get Dashboard information"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LookupARP(self, request, context):
        """Lookup ARP history for a given mac address"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateServerPool(self, request, context):
        """Create a new server pool"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListServerPools(self, request, context):
        """List all available server pools"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteServerPool(self, request, context):
        """Delete a server pool"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListArpEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetArpEntriesSearchOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUsageReporting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListRegions": grpc.unary_unary_rpc_method_handler(
            servicer.ListRegions,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListRegionsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListRegionsResponse.SerializeToString,
        ),
        "GetRegion": grpc.unary_unary_rpc_method_handler(
            servicer.GetRegion,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetRegionRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetRegionResponse.SerializeToString,
        ),
        "UpdateDatacenter": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateDatacenter,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateDatacenterRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateDatacenterResponse.SerializeToString,
        ),
        "ListAgents": grpc.unary_unary_rpc_method_handler(
            servicer.ListAgents,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAgentsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAgentsResponse.SerializeToString,
        ),
        "CreateAgent": grpc.unary_unary_rpc_method_handler(
            servicer.CreateAgent,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateAgentRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateAgentResponse.SerializeToString,
        ),
        "DeleteAgent": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAgent,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteAgentRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteAgentResponse.SerializeToString,
        ),
        "ListServers": grpc.unary_unary_rpc_method_handler(
            servicer.ListServers,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServersRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServersResponse.SerializeToString,
        ),
        "SubscribeServerLogs": grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeServerLogs,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.SubscribeServerLogsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.SubscribeServerLogsResponse.SerializeToString,
        ),
        "GetServerSearchOptions": grpc.unary_unary_rpc_method_handler(
            servicer.GetServerSearchOptions,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerSearchOptionsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerSearchOptionsResponse.SerializeToString,
        ),
        "ImportServer": grpc.unary_unary_rpc_method_handler(
            servicer.ImportServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImportServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImportServerResponse.SerializeToString,
        ),
        "GetServer": grpc.unary_unary_rpc_method_handler(
            servicer.GetServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerResponse.SerializeToString,
        ),
        "UpdateServer": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateServerResponse.SerializeToString,
        ),
        "UpdateNode": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateNode,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNodeResponse.SerializeToString,
        ),
        "DestroyNode": grpc.unary_unary_rpc_method_handler(
            servicer.DestroyNode,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DestroyNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DestroyNodeResponse.SerializeToString,
        ),
        "DeleteServer": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerResponse.SerializeToString,
        ),
        "ReplaceServer": grpc.unary_unary_rpc_method_handler(
            servicer.ReplaceServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ReplaceServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ReplaceServerResponse.SerializeToString,
        ),
        "ListServerLogs": grpc.unary_unary_rpc_method_handler(
            servicer.ListServerLogs,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerLogsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerLogsResponse.SerializeToString,
        ),
        "ListUsers": grpc.unary_unary_rpc_method_handler(
            servicer.ListUsers,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListUsersRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListUsersResponse.SerializeToString,
        ),
        "GetUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserResponse.SerializeToString,
        ),
        "UpdateUser": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateUserResponse.SerializeToString,
        ),
        "LockUser": grpc.unary_unary_rpc_method_handler(
            servicer.LockUser,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LockUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LockUserResponse.SerializeToString,
        ),
        "UnlockUser": grpc.unary_unary_rpc_method_handler(
            servicer.UnlockUser,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UnlockUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UnlockUserResponse.SerializeToString,
        ),
        "GetUserStats": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserStats,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserStatsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserStatsResponse.SerializeToString,
        ),
        "ImpersonateUser": grpc.unary_unary_rpc_method_handler(
            servicer.ImpersonateUser,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImpersonateUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImpersonateUserResponse.SerializeToString,
        ),
        "GetServerPlatformManagement": grpc.unary_unary_rpc_method_handler(
            servicer.GetServerPlatformManagement,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerPlatformManagementRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerPlatformManagementResponse.SerializeToString,
        ),
        "ListAvailableServer": grpc.unary_unary_rpc_method_handler(
            servicer.ListAvailableServer,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAvailableServerRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAvailableServerResponse.SerializeToString,
        ),
        "TriggerServerAction": grpc.unary_unary_rpc_method_handler(
            servicer.TriggerServerAction,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.TriggerServerActionRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.TriggerServerActionResponse.SerializeToString,
        ),
        "CreateImage": grpc.unary_unary_rpc_method_handler(
            servicer.CreateImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateImageResponse.SerializeToString,
        ),
        "ListImages": grpc.unary_unary_rpc_method_handler(
            servicer.ListImages,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListImagesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListImagesResponse.SerializeToString,
        ),
        "GetImage": grpc.unary_unary_rpc_method_handler(
            servicer.GetImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetImageResponse.SerializeToString,
        ),
        "UpdateImage": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateImageResponse.SerializeToString,
        ),
        "DeleteImage": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageResponse.SerializeToString,
        ),
        "DeleteImageVersion": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteImageVersion,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageVersionRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageVersionResponse.SerializeToString,
        ),
        "ListCloudProviderImages": grpc.unary_unary_rpc_method_handler(
            servicer.ListCloudProviderImages,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListCloudProviderImagesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListCloudProviderImagesResponse.SerializeToString,
        ),
        "AddCloudProviderImage": grpc.unary_unary_rpc_method_handler(
            servicer.AddCloudProviderImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.AddCloudProviderImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.AddCloudProviderImageResponse.SerializeToString,
        ),
        "DeleteCloudProviderImage": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCloudProviderImage,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteCloudProviderImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteCloudProviderImageResponse.SerializeToString,
        ),
        "ListOperatingSystems": grpc.unary_unary_rpc_method_handler(
            servicer.ListOperatingSystems,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListOperatingSystemsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListOperatingSystemsResponse.SerializeToString,
        ),
        "DeleteOperatingSystem": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteOperatingSystem,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteOperatingSystemRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteOperatingSystemResponse.SerializeToString,
        ),
        "CreateOperatingSystem": grpc.unary_unary_rpc_method_handler(
            servicer.CreateOperatingSystem,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateOperatingSystemRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateOperatingSystemResponse.SerializeToString,
        ),
        "GetOperatingSystem": grpc.unary_unary_rpc_method_handler(
            servicer.GetOperatingSystem,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetOperatingSystemRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetOperatingSystemResponse.SerializeToString,
        ),
        "UpdateOperatingSystem": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateOperatingSystem,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateOperatingSystemRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateOperatingSystemResponse.SerializeToString,
        ),
        "ListFlavours": grpc.unary_unary_rpc_method_handler(
            servicer.ListFlavours,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListFlavoursRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListFlavoursResponse.SerializeToString,
        ),
        "GetFlavour": grpc.unary_unary_rpc_method_handler(
            servicer.GetFlavour,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetFlavourRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetFlavourResponse.SerializeToString,
        ),
        "DeleteFlavour": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteFlavour,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteFlavourRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteFlavourResponse.SerializeToString,
        ),
        "CreateFlavour": grpc.unary_unary_rpc_method_handler(
            servicer.CreateFlavour,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateFlavourRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateFlavourResponse.SerializeToString,
        ),
        "UpdateFlavour": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateFlavour,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateFlavourRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateFlavourResponse.SerializeToString,
        ),
        "ListSwitches": grpc.unary_unary_rpc_method_handler(
            servicer.ListSwitches,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListSwitchesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListSwitchesResponse.SerializeToString,
        ),
        "GetSwitch": grpc.unary_unary_rpc_method_handler(
            servicer.GetSwitch,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSwitchRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSwitchResponse.SerializeToString,
        ),
        "ListProjects": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjects,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectsResponse.SerializeToString,
        ),
        "GetProject": grpc.unary_unary_rpc_method_handler(
            servicer.GetProject,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetProjectResponse.SerializeToString,
        ),
        "UpdateProject": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateProject,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateProjectResponse.SerializeToString,
        ),
        "ListProjectNodes": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectNodes,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNodesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNodesResponse.SerializeToString,
        ),
        "ListProjectNetworks": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectNetworks,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNetworksRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNetworksResponse.SerializeToString,
        ),
        "CreateProjectNetwork": grpc.unary_unary_rpc_method_handler(
            servicer.CreateProjectNetwork,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateProjectNetworkRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateProjectNetworkResponse.SerializeToString,
        ),
        "ListAdminLogs": grpc.unary_unary_rpc_method_handler(
            servicer.ListAdminLogs,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAdminLogsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAdminLogsResponse.SerializeToString,
        ),
        "GetSplaReporting": grpc.unary_unary_rpc_method_handler(
            servicer.GetSplaReporting,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSplaReportingRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSplaReportingResponse.SerializeToString,
        ),
        "ListIPHistories": grpc.unary_unary_rpc_method_handler(
            servicer.ListIPHistories,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListIPHistoriesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListIPHistoriesResponse.SerializeToString,
        ),
        "ListNetworks": grpc.unary_unary_rpc_method_handler(
            servicer.ListNetworks,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListNetworksRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListNetworksResponse.SerializeToString,
        ),
        "CreateNetwork": grpc.unary_unary_rpc_method_handler(
            servicer.CreateNetwork,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateNetworkRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateNetworkResponse.SerializeToString,
        ),
        "DeleteNetwork": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteNetwork,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteNetworkRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteNetworkResponse.SerializeToString,
        ),
        "GetNetwork": grpc.unary_unary_rpc_method_handler(
            servicer.GetNetwork,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetNetworkRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetNetworkResponse.SerializeToString,
        ),
        "UpdateNetwork": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateNetwork,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNetworkRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNetworkResponse.SerializeToString,
        ),
        "DeleteSubnet": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteSubnet,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteSubnetRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteSubnetResponse.SerializeToString,
        ),
        "CreateSubnet": grpc.unary_unary_rpc_method_handler(
            servicer.CreateSubnet,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateSubnetRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateSubnetResponse.SerializeToString,
        ),
        "UpdateSubnet": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSubnet,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateSubnetRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateSubnetResponse.SerializeToString,
        ),
        "GetDashboard": grpc.unary_unary_rpc_method_handler(
            servicer.GetDashboard,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetDashboardRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetDashboardResponse.SerializeToString,
        ),
        "LookupARP": grpc.unary_unary_rpc_method_handler(
            servicer.LookupARP,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LookupARPRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LookupARPResponse.SerializeToString,
        ),
        "CreateServerPool": grpc.unary_unary_rpc_method_handler(
            servicer.CreateServerPool,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateServerPoolRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateServerPoolResponse.SerializeToString,
        ),
        "ListServerPools": grpc.unary_unary_rpc_method_handler(
            servicer.ListServerPools,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerPoolsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerPoolsResponse.SerializeToString,
        ),
        "DeleteServerPool": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteServerPool,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerPoolRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerPoolResponse.SerializeToString,
        ),
        "ListArpEntries": grpc.unary_unary_rpc_method_handler(
            servicer.ListArpEntries,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListArpEntriesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListArpEntriesResponse.SerializeToString,
        ),
        "GetArpEntriesSearchOptions": grpc.unary_unary_rpc_method_handler(
            servicer.GetArpEntriesSearchOptions,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetArpEntriesSearchOptionsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetArpEntriesSearchOptionsResponse.SerializeToString,
        ),
        "GetUsageReporting": grpc.unary_unary_rpc_method_handler(
            servicer.GetUsageReporting,
            request_deserializer=gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUsageReportingRequest.FromString,
            response_serializer=gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUsageReportingResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "gpcore.api.admin.v1.AdminService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "gpcore.api.admin.v1.AdminService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListRegions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListRegions",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListRegionsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListRegionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetRegion(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetRegion",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetRegionRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetRegionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateDatacenter(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateDatacenter",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateDatacenterRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateDatacenterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListAgents(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListAgents",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAgentsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAgentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateAgent",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateAgentRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteAgent",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteAgentRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteAgentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListServers(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListServers",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServersRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SubscribeServerLogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/SubscribeServerLogs",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.SubscribeServerLogsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.SubscribeServerLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetServerSearchOptions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetServerSearchOptions",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerSearchOptionsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerSearchOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ImportServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ImportServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImportServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImportServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateNode",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNodeRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DestroyNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DestroyNode",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DestroyNodeRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DestroyNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ReplaceServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ReplaceServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ReplaceServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ReplaceServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListServerLogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListServerLogs",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerLogsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListUsers(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListUsers",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListUsersRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetUser",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateUser",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateUserRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def LockUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/LockUser",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LockUserRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LockUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UnlockUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UnlockUser",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UnlockUserRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UnlockUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUserStats(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetUserStats",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUserStatsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUserStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ImpersonateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ImpersonateUser",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ImpersonateUserRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ImpersonateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetServerPlatformManagement(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetServerPlatformManagement",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetServerPlatformManagementRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetServerPlatformManagementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListAvailableServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListAvailableServer",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAvailableServerRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAvailableServerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def TriggerServerAction(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/TriggerServerAction",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.TriggerServerActionRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.TriggerServerActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListImages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListImages",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListImagesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteImageVersion(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteImageVersion",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteImageVersionRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteImageVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListCloudProviderImages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListCloudProviderImages",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListCloudProviderImagesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListCloudProviderImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def AddCloudProviderImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/AddCloudProviderImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.AddCloudProviderImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.AddCloudProviderImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteCloudProviderImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteCloudProviderImage",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteCloudProviderImageRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteCloudProviderImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListOperatingSystems(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListOperatingSystems",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListOperatingSystemsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListOperatingSystemsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteOperatingSystem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteOperatingSystem",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteOperatingSystemRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteOperatingSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateOperatingSystem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateOperatingSystem",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateOperatingSystemRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateOperatingSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetOperatingSystem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetOperatingSystem",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetOperatingSystemRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetOperatingSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateOperatingSystem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateOperatingSystem",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateOperatingSystemRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateOperatingSystemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListFlavours(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListFlavours",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListFlavoursRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListFlavoursResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetFlavour(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetFlavour",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetFlavourRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetFlavourResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteFlavour(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteFlavour",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteFlavourRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteFlavourResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateFlavour(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateFlavour",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateFlavourRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateFlavourResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateFlavour(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateFlavour",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateFlavourRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateFlavourResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListSwitches(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListSwitches",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListSwitchesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListSwitchesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetSwitch(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetSwitch",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSwitchRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSwitchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjects(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListProjects",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetProject",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetProjectRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateProject",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateProjectRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectNodes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListProjectNodes",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNodesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectNetworks(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListProjectNetworks",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListProjectNetworksRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListProjectNetworksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateProjectNetwork(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateProjectNetwork",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateProjectNetworkRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateProjectNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListAdminLogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListAdminLogs",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListAdminLogsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListAdminLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetSplaReporting(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetSplaReporting",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetSplaReportingRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetSplaReportingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListIPHistories(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListIPHistories",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListIPHistoriesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListIPHistoriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListNetworks(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListNetworks",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListNetworksRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListNetworksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateNetwork(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateNetwork",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateNetworkRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteNetwork(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteNetwork",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteNetworkRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetNetwork(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetNetwork",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetNetworkRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateNetwork(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateNetwork",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateNetworkRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteSubnet(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteSubnet",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteSubnetRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteSubnetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateSubnet(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateSubnet",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateSubnetRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateSubnetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateSubnet(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/UpdateSubnet",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.UpdateSubnetRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.UpdateSubnetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetDashboard(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetDashboard",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetDashboardRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetDashboardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def LookupARP(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/LookupARP",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.LookupARPRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.LookupARPResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateServerPool(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/CreateServerPool",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.CreateServerPoolRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.CreateServerPoolResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListServerPools(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListServerPools",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListServerPoolsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListServerPoolsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteServerPool(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/DeleteServerPool",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.DeleteServerPoolRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.DeleteServerPoolResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListArpEntries(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/ListArpEntries",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.ListArpEntriesRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.ListArpEntriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetArpEntriesSearchOptions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetArpEntriesSearchOptions",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetArpEntriesSearchOptionsRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetArpEntriesSearchOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUsageReporting(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.admin.v1.AdminService/GetUsageReporting",
            gpcore_dot_api_dot_admin_dot_v1_dot_requests__pb2.GetUsageReportingRequest.SerializeToString,
            gpcore_dot_api_dot_admin_dot_v1_dot_responses__pb2.GetUsageReportingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
