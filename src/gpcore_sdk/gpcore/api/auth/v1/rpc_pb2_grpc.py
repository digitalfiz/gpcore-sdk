# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
import warnings

from gpcore_sdk.gpcore.api.auth.v1 import (
    requests_pb2 as gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2,
)
from gpcore_sdk.gpcore.api.auth.v1 import (
    responses_pb2 as gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2,
)

GRPC_GENERATED_VERSION = "1.74.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in gpcore/api/auth/v1/rpc_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class AuthServiceStub(object):
    """AuthService provides authentication and authorization services."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/Register",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.RegisterRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.RegisterResponse.FromString,
            _registered_method=True,
        )
        self.GetUser = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/GetUser",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetUserRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetUserResponse.FromString,
            _registered_method=True,
        )
        self.ResendConfirmEMail = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/ResendConfirmEMail",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResendConfirmEMailRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResendConfirmEMailResponse.FromString,
            _registered_method=True,
        )
        self.ListClients = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/ListClients",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ListClientsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ListClientsResponse.FromString,
            _registered_method=True,
        )
        self.CreateClient = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/CreateClient",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.CreateClientRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.CreateClientResponse.FromString,
            _registered_method=True,
        )
        self.GetClient = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/GetClient",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetClientRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetClientResponse.FromString,
            _registered_method=True,
        )
        self.UpdateClient = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/UpdateClient",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.UpdateClientRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.UpdateClientResponse.FromString,
            _registered_method=True,
        )
        self.DeleteClient = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/DeleteClient",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.DeleteClientRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.DeleteClientResponse.FromString,
            _registered_method=True,
        )
        self.ResetClientSecret = channel.unary_unary(
            "/gpcore.api.auth.v1.AuthService/ResetClientSecret",
            request_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResetClientSecretRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResetClientSecretResponse.FromString,
            _registered_method=True,
        )


class AuthServiceServicer(object):
    """AuthService provides authentication and authorization services."""

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ResendConfirmEMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListClients(self, request, context):
        """ListClients returns a list of your OAuth 2 / OpenID Connect clients."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateClient(self, request, context):
        """CreateClient creates a new OAuth 2 / OpenID Connect client inclusive a service account.
        The client secret is returned in the response as well, please store it securely.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetClient(self, request, context):
        """GetClient returns the details of an OAuth 2 / OpenID Connect client by its ID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateClient(self, request, context):
        """UpdateClient updates an OAuth 2 / OpenID Connect client by its ID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteClient(self, request, context):
        """DeleteClient deletes an OAuth 2 / OpenID Connect client by its ID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ResetClientSecret(self, request, context):
        """ResetClientSecret resets the client secret of an OAuth 2 / OpenID Connect client by its ID.
        Please store the new client secret securely.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Register": grpc.unary_unary_rpc_method_handler(
            servicer.Register,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.RegisterRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.RegisterResponse.SerializeToString,
        ),
        "GetUser": grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetUserRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetUserResponse.SerializeToString,
        ),
        "ResendConfirmEMail": grpc.unary_unary_rpc_method_handler(
            servicer.ResendConfirmEMail,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResendConfirmEMailRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResendConfirmEMailResponse.SerializeToString,
        ),
        "ListClients": grpc.unary_unary_rpc_method_handler(
            servicer.ListClients,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ListClientsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ListClientsResponse.SerializeToString,
        ),
        "CreateClient": grpc.unary_unary_rpc_method_handler(
            servicer.CreateClient,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.CreateClientRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.CreateClientResponse.SerializeToString,
        ),
        "GetClient": grpc.unary_unary_rpc_method_handler(
            servicer.GetClient,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetClientRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetClientResponse.SerializeToString,
        ),
        "UpdateClient": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateClient,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.UpdateClientRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.UpdateClientResponse.SerializeToString,
        ),
        "DeleteClient": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteClient,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.DeleteClientRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.DeleteClientResponse.SerializeToString,
        ),
        "ResetClientSecret": grpc.unary_unary_rpc_method_handler(
            servicer.ResetClientSecret,
            request_deserializer=gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResetClientSecretRequest.FromString,
            response_serializer=gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResetClientSecretResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "gpcore.api.auth.v1.AuthService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "gpcore.api.auth.v1.AuthService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """AuthService provides authentication and authorization services."""

    @staticmethod
    def Register(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/Register",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.RegisterRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/GetUser",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetUserRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ResendConfirmEMail(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/ResendConfirmEMail",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResendConfirmEMailRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResendConfirmEMailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListClients(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/ListClients",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ListClientsRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ListClientsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/CreateClient",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.CreateClientRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.CreateClientResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/GetClient",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.GetClientRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.GetClientResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/UpdateClient",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.UpdateClientRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.UpdateClientResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/DeleteClient",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.DeleteClientRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.DeleteClientResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ResetClientSecret(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.auth.v1.AuthService/ResetClientSecret",
            gpcore_dot_api_dot_auth_dot_v1_dot_requests__pb2.ResetClientSecretRequest.SerializeToString,
            gpcore_dot_api_dot_auth_dot_v1_dot_responses__pb2.ResetClientSecretResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
