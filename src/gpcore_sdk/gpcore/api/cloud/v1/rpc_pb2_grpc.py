# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
import warnings

from gpcore_sdk.gpcore.api.cloud.v1 import (
    requests_pb2 as gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2,
)
from gpcore_sdk.gpcore.api.cloud.v1 import (
    responses_pb2 as gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2,
)

GRPC_GENERATED_VERSION = "1.74.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in gpcore/api/cloud/v1/rpc_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class CloudServiceStub(object):
    """CloudService provide the basic needs to work with projects and their nodes.
    This is your daily driver to maintain and grow your fleet of nodes. Projects
    group a list of nodes. Every project can have it's own bill. Users can be part
    of one or more projects.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCountries = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListCountries",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListCountriesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListCountriesResponse.FromString,
            _registered_method=True,
        )
        self.ListTimezones = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListTimezones",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListTimezonesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListTimezonesResponse.FromString,
            _registered_method=True,
        )
        self.UpdateTimezone = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/UpdateTimezone",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateTimezoneRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateTimezoneResponse.FromString,
            _registered_method=True,
        )
        self.ListDatacenters = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListDatacenters",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListDatacentersRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListDatacentersResponse.FromString,
            _registered_method=True,
        )
        self.ListPublicImages = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListPublicImages",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListPublicImagesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListPublicImagesResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectFlavours = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectFlavours",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectFlavoursRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectFlavoursResponse.FromString,
            _registered_method=True,
        )
        self.CreateProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/CreateProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectResponse.FromString,
            _registered_method=True,
        )
        self.ListProjects = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjects",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectsResponse.FromString,
            _registered_method=True,
        )
        self.GetProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectResponse.FromString,
            _registered_method=True,
        )
        self.UpdateProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/UpdateProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectResponse.FromString,
            _registered_method=True,
        )
        self.DeleteProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DeleteProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectResponse.FromString,
            _registered_method=True,
        )
        self.InviteMemberToProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/InviteMemberToProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.InviteMemberToProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.InviteMemberToProjectResponse.FromString,
            _registered_method=True,
        )
        self.JoinProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/JoinProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.JoinProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.JoinProjectResponse.FromString,
            _registered_method=True,
        )
        self.LeaveProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/LeaveProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.LeaveProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.LeaveProjectResponse.FromString,
            _registered_method=True,
        )
        self.RemoveMemberFromProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/RemoveMemberFromProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.RemoveMemberFromProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.RemoveMemberFromProjectResponse.FromString,
            _registered_method=True,
        )
        self.CreateProjectCloudProvider = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/CreateProjectCloudProvider",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectCloudProviderRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectCloudProviderResponse.FromString,
            _registered_method=True,
        )
        self.GetProjectCloudProvider = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetProjectCloudProvider",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectCloudProviderRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectCloudProviderResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectCloudProviders = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectCloudProviders",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProvidersRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProvidersResponse.FromString,
            _registered_method=True,
        )
        self.UpdateProjectCloudProvider = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/UpdateProjectCloudProvider",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectCloudProviderRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectCloudProviderResponse.FromString,
            _registered_method=True,
        )
        self.DeleteProjectCloudProvider = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectCloudProvider",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectCloudProviderRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectCloudProviderResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectCloudProviderResources = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectCloudProviderResources",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProviderResourcesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProviderResourcesResponse.FromString,
            _registered_method=True,
        )
        self.ImportProjectCloudProviderResource = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ImportProjectCloudProviderResource",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ImportProjectCloudProviderResourceRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ImportProjectCloudProviderResourceResponse.FromString,
            _registered_method=True,
        )
        self.GetProjectUsage = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetProjectUsage",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectUsageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectUsageResponse.FromString,
            _registered_method=True,
        )
        self.ListBillingProfileBills = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListBillingProfileBills",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileBillsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileBillsResponse.FromString,
            _registered_method=True,
        )
        self.GetProjectLocks = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetProjectLocks",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectLocksRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectLocksResponse.FromString,
            _registered_method=True,
        )
        self.ListBillingProfileProjects = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListBillingProfileProjects",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileProjectsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileProjectsResponse.FromString,
            _registered_method=True,
        )
        self.GetBillingProfileBillDetails = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetBillingProfileBillDetails",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillDetailsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillDetailsResponse.FromString,
            _registered_method=True,
        )
        self.GetBillingProfileBillPdf = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetBillingProfileBillPdf",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillPdfRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillPdfResponse.FromString,
            _registered_method=True,
        )
        self.ChangeDefaultProject = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ChangeDefaultProject",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeDefaultProjectRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeDefaultProjectResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectLogs = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectLogs",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectLogsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectLogsResponse.FromString,
            _registered_method=True,
        )
        self.SubscribeNotifications = channel.unary_stream(
            "/gpcore.api.cloud.v1.CloudService/SubscribeNotifications",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.SubscribeNotificationsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.SubscribeNotificationsResponse.FromString,
            _registered_method=True,
        )
        self.ChangeNodeBillingPeriod = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ChangeNodeBillingPeriod",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeBillingPeriodRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeBillingPeriodResponse.FromString,
            _registered_method=True,
        )
        self.ListNodes = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListNodes",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListNodesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListNodesResponse.FromString,
            _registered_method=True,
        )
        self.GetNodeSearchOptions = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetNodeSearchOptions",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeSearchOptionsRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeSearchOptionsResponse.FromString,
            _registered_method=True,
        )
        self.GetNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeResponse.FromString,
            _registered_method=True,
        )
        self.CreateNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/CreateNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateNodeResponse.FromString,
            _registered_method=True,
        )
        self.UpdateNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/UpdateNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateNodeResponse.FromString,
            _registered_method=True,
        )
        self.DestroyNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DestroyNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DestroyNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DestroyNodeResponse.FromString,
            _registered_method=True,
        )
        self.ReinstallNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ReinstallNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ReinstallNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ReinstallNodeResponse.FromString,
            _registered_method=True,
        )
        self.PowerActionNode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/PowerActionNode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.PowerActionNodeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.PowerActionNodeResponse.FromString,
            _registered_method=True,
        )
        self.GetRemoteConsoleAccess = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetRemoteConsoleAccess",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetRemoteConsoleAccessRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetRemoteConsoleAccessResponse.FromString,
            _registered_method=True,
        )
        self.ChangeNodeRescueMode = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ChangeNodeRescueMode",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeRescueModeRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeRescueModeResponse.FromString,
            _registered_method=True,
        )
        self.GetUserNodeLimit = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetUserNodeLimit",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetUserNodeLimitRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetUserNodeLimitResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectImages = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectImages",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectImagesRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectImagesResponse.FromString,
            _registered_method=True,
        )
        self.GetProjectImage = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/GetProjectImage",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectImageResponse.FromString,
            _registered_method=True,
        )
        self.CreateProjectImage = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/CreateProjectImage",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectImageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteProjectImage = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectImage",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageResponse.FromString,
            _registered_method=True,
        )
        self.DeleteProjectImageVersion = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectImageVersion",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageVersionRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageVersionResponse.FromString,
            _registered_method=True,
        )
        self.ListProjectSSHKeys = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListProjectSSHKeys",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectSSHKeysRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectSSHKeysResponse.FromString,
            _registered_method=True,
        )
        self.ListUserSSHKeys = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/ListUserSSHKeys",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListUserSSHKeysRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListUserSSHKeysResponse.FromString,
            _registered_method=True,
        )
        self.CreateUserSSHKey = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/CreateUserSSHKey",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateUserSSHKeyRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateUserSSHKeyResponse.FromString,
            _registered_method=True,
        )
        self.DeleteUserSSHKey = channel.unary_unary(
            "/gpcore.api.cloud.v1.CloudService/DeleteUserSSHKey",
            request_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteUserSSHKeyRequest.SerializeToString,
            response_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteUserSSHKeyResponse.FromString,
            _registered_method=True,
        )


class CloudServiceServicer(object):
    """CloudService provide the basic needs to work with projects and their nodes.
    This is your daily driver to maintain and grow your fleet of nodes. Projects
    group a list of nodes. Every project can have it's own bill. Users can be part
    of one or more projects.
    """

    def ListCountries(self, request, context):
        """ListCountries lists all the supported countries in which we provide business.
        You can use this to check the tax rate and if we provide network support for
        what country. If your country is not in that list, you can not use the service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListTimezones(self, request, context):
        """ListTimezones lists all available timezones which can be configured as user timezone."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateTimezone(self, request, context):
        """UpdateTimezone Updates your user timezone. Changing the timezone affects your
        billing periods an future bills.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListDatacenters(self, request, context):
        """ListDatacenters lists all the available datacenters you can order new nodes.
        This list will grow over time when more datacenters are added, but it can
        sometimes shrink for some time if there are no hardware available in this
        region. Upcoming datacenters are still in that list, but has the status flag
        COMING_SOON. If you place a new order in a specific datacenter, make sure the
        status is AVAILABLE.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListPublicImages(self, request, context):
        """ListPublicImages list all public OS images which can be used to install on
        a node. Different flavours provide a different list of images, so you need
        to provide a flavour ID. You get the list of available flavours for a given
        project from the ListProjectFlavours call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectFlavours(self, request, context):
        """ListProjectFlavours list all the available flavours for the given project ID
        and the datacenter. Not all flavours are available on all datacenters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateProject(self, request, context):
        """CreateProject creates a new project. This will create a new "container" for
        nodes, associated to an environment, billing address and payment method. After
        creating a project, you can further specify additional fields be using the
        UpdateProject call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjects(self, request, context):
        """ListProjects list all available projects. A project is a container for nodes,
        associated with a billing address and other settings specific for that
        project. To filter the result, you can provide a user_id to only get
        projects which the user with the user_id is part of that project (member of
        the project). You can further reduce the project list by providing a search
        term. Spaces in search are allowed to search for multiple terms (AND not OR).
        Use the page field in the request to set an offset. This is useful for
        pagination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProject(self, request, context):
        """GetProject return a project by its uuid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateProject(self, request, context):
        """UpdateProject updates an existing project. In contrast to CreatProject you can
        specify more fields to change like a payment method, credit card or a billing
        address. The returned response will contain the changed project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteProject(self, request, context):
        """DeleteProject deletes a project, given by its uuid. Make sure you have the owner
        role and are member of that project. A project marked as default project can not
        be deleted. Also projects which have nodes, bills which are not payed yet or an
        outstanding balance can not be deleted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def InviteMemberToProject(self, request, context):
        """InviteMemberToProject invites a new user or service account to a project.
        The calling user (the one who call that endpoint) need to have the "OWNER" role of the given project
        Further the given identifier needs to belong to a already registered user or service account.
        The target user needs to confirm his project invitation, service accounts are automatically added.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def JoinProject(self, request, context):
        """JoinProject accept or reject an project invite. As a prerequisite for that, the user
        need to be invited first with the InviteMemberToProject endpoint. If the
        project invite is rejected, the invite will be deleted. If the invite is
        accepted, the user will join the project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LeaveProject(self, request, context):
        """LeaveProject leaves a project (the current logged in user). The project
        need to exit, the user need to be an active member of that project and
        the project itself can not be the default project. For the last condition,
        you can set another project to the default project to leave this project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RemoveMemberFromProject(self, request, context):
        """RemoveMemberFromProject removes a user from a project. The executive user
        need to be part of that project and hold the owner role for that action.
        You can not remove yourself or the owner (mostly the same user) from the
        project. The removed user is no longer part of that project and need to
        be invited again.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateProjectCloudProvider(self, request, context):
        """CreateProjectCloudProvider creates a new cloud provider reference for a given project."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProjectCloudProvider(self, request, context):
        """GetProjectCloudProvider returns a single cloud provider for a given project.
        This is a reference to a external cloud provider like AWS. The returned
        object contain all necessary information to work with that cloud provider.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectCloudProviders(self, request, context):
        """ListProjectCloudProviders returns a list of all cloud providers associated
        to a given project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateProjectCloudProvider(self, request, context):
        """UpdateProjectCloudProvider updates a cloud provider reference for a given project.
        After the call, the information (access token, region) will be checked
        for validity. If the cloud provider is not valid, the call will succeed,
        but the valid flag will be set to false. In this case, the cloud provider
        can not be used for further actions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteProjectCloudProvider(self, request, context):
        """DeleteProjectCloudProvider deletes a cloud provider reference for a given project.
        The actual account on the cloud provider will not be touched, just the
        reference to GPCORE will be removed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectCloudProviderResources(self, request, context):
        """ListProjectCloudProviderResources Lists all available cloud resources on
        that specific cloud provider account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ImportProjectCloudProviderResource(self, request, context):
        """ImportProjectCloudProviderResource imports a cloud provider resource to the project.
        It is used to link external cloud provider resources to a node in the project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProjectUsage(self, request, context):
        """GetProjectUsage returns the current usage of a project. This includes the
        current billing period total amount and the information how much of the
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListBillingProfileBills(self, request, context):
        """ListBillingProfileBills returns a list of bills associated to a given
        billing profile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProjectLocks(self, request, context):
        """GetProjectLocks return a list of locks, which are currently applied to the
        given project. If the list is empty, no locks are applied at this point.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListBillingProfileProjects(self, request, context):
        """ListBillingProfileProjects returns a list of projects associated to a
        given billing profile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetBillingProfileBillDetails(self, request, context):
        """GetBillingProfileBillDetails returns the details of a given bill."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetBillingProfileBillPdf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ChangeDefaultProject(self, request, context):
        """ChangeDefaultProject set a project as the new default project. The first
        project created is automatically the default project. Only one project can
        be the default project. Changing it will remove the default project flag
        from all other projects available. The so chosen default project will be
        loaded when the panel will be loaded. Use this to specify the project you
        are currently working on the most to your default project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectLogs(self, request, context):
        """ListProjectLogs list the audit log entries for a given project. This log
        contain events happen on that project like membership changes, changes on
        settings or nodes. The executing user and the time is logged to all
        entries, so it can be used as an audit log. To narrow down the results,
        you can specify a user uuid to only show log entries for a given user. An
        optional search term can filter the result. If the result set is too large,
        only a portion will be returned. The pages_total field will indicated this.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SubscribeNotifications(self, request, context):
        """SubscribeNotifications subscribe to new notifications and return a STREAM
        of notification responses. A notification contain types like a user, a project
        or a node and will be send to all subscribers, if there are changes on
        one of that objects. In other words, when you subscribe to notifications,
        you get notified (with the changed object) when something changed on the
        server side on users, projects and nodes you are associated with. This can
        be used to trigger actions, update UI elements or revisit the changes.

        The stream also provides heartbeats in a interval of 5 seconds. If you
        don't receive any notification for more then 5 seconds, the connection
        should be reopened.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ChangeNodeBillingPeriod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListNodes(self, request, context):
        """ListNodes list all available nodes for a given project. If the list is too
        long, only a portion of the result will be returned. The pages_total field
        will give an indication what portion is left from the result. Use the page
        field to specify an offset. Use the search field to filter the results.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetNodeSearchOptions(self, request, context):
        """GetNodeSearchOptions returns a list with all available search fields."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetNode(self, request, context):
        """GetNode return a single node object. The returned node object contain
        everything to work with that node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateNode(self, request, context):
        """CreateNode creates a new node. Before that, various precondition checks will
        be performed. If one single check fails, the complete creation process is
        canceled. This has no side effects. After all checks are successful, the
        collected data will be added to the database and a ServerInstallJob is
        scheduled. This has indeed side effects, but is not part of that call
        anymore. So keep in mind that this function can be successful, but the node
        creation may still can fail for some scenarios.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateNode(self, request, context):
        """UpdateNode set a new FQDN and add more key/value tags to a previously
        created node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DestroyNode(self, request, context):
        """DestroyNode deletes a node. This process includes bringing the node back to
        factory settings, delete all data, disconnect it from the project and release
        it back to the public pool of available nodes. When deleting a node, a final
        bill for that node will be calculated with the end date set to the time the
        node is deleted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReinstallNode(self, request, context):
        """ReinstallNode reinstall a given node with a given image and optional
        credentials. This is non-blocking call, so the new installation is triggered
        but may not be finished on return of that call. To check the installation
        state, you can use the GetNode call and examine the status field
        (ServerProvisioningState). To see what happen during the reinstall, you can
        watch the project logs with the ListProjectLogs call or use the GetNodeConsole
        call to watch the installation over VNC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PowerActionNode(self, request, context):
        """GetNodeConsole return the VNC password and a JWT token to access the remote
        console. This only works if the node has a Platform Management interface
        (iLO, IPMI). Use the VNC credentials to connect to the PM and interact with
        the node with a virtual screen and keyboard.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRemoteConsoleAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ChangeNodeRescueMode(self, request, context):
        """ChangeNodeRescueMode enable or disable the rescue mode boot for a given node.
        This is used in emergency situations where the node can not be accessed any
        more (ssh server not started on boot), the installation is broken (kernel panic),
        or the node is otherwise unable to boot (disk full, ...). A prepared rescue
        image will be booted on that node with a randomly generated ssh root password,
        which will be part of the response of that call. In that rescue mode, you can
        mount your disk, fix the problem and change the rescue mode back to normal mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetUserNodeLimit(self, request, context):
        """GetUserNodeLimit return the node limit for a user. The user can not exceed
        the node limit. The response contains the upper limit and the number of
        nodes currently in use.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectImages(self, request, context):
        """ListProjectImages list all available images for that project."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetProjectImage(self, request, context):
        """GetProjectImage return the metadata for a specific image, associated to the
        project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateProjectImage(self, request, context):
        """CreateProjectImage create a new image associated to the given project."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteProjectImage(self, request, context):
        """DeleteProjectImage deletes a project image."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteProjectImageVersion(self, request, context):
        """DeleteProjectImageVersion deletes a specific version of a project image."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListProjectSSHKeys(self, request, context):
        """ListProjectSSHKeys list all available SSH public keys for a project."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListUserSSHKeys(self, request, context):
        """ListUserSHSKeys list all available SSH public keys for a user."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateUserSSHKey(self, request, context):
        """CreateUserSSHKey adds a new SSH public key to the user."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUserSSHKey(self, request, context):
        """DeleteUserSSHKey removes a SSH public key from the user."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CloudServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListCountries": grpc.unary_unary_rpc_method_handler(
            servicer.ListCountries,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListCountriesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListCountriesResponse.SerializeToString,
        ),
        "ListTimezones": grpc.unary_unary_rpc_method_handler(
            servicer.ListTimezones,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListTimezonesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListTimezonesResponse.SerializeToString,
        ),
        "UpdateTimezone": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateTimezone,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateTimezoneRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateTimezoneResponse.SerializeToString,
        ),
        "ListDatacenters": grpc.unary_unary_rpc_method_handler(
            servicer.ListDatacenters,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListDatacentersRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListDatacentersResponse.SerializeToString,
        ),
        "ListPublicImages": grpc.unary_unary_rpc_method_handler(
            servicer.ListPublicImages,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListPublicImagesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListPublicImagesResponse.SerializeToString,
        ),
        "ListProjectFlavours": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectFlavours,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectFlavoursRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectFlavoursResponse.SerializeToString,
        ),
        "CreateProject": grpc.unary_unary_rpc_method_handler(
            servicer.CreateProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectResponse.SerializeToString,
        ),
        "ListProjects": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjects,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectsResponse.SerializeToString,
        ),
        "GetProject": grpc.unary_unary_rpc_method_handler(
            servicer.GetProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectResponse.SerializeToString,
        ),
        "UpdateProject": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectResponse.SerializeToString,
        ),
        "DeleteProject": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectResponse.SerializeToString,
        ),
        "InviteMemberToProject": grpc.unary_unary_rpc_method_handler(
            servicer.InviteMemberToProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.InviteMemberToProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.InviteMemberToProjectResponse.SerializeToString,
        ),
        "JoinProject": grpc.unary_unary_rpc_method_handler(
            servicer.JoinProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.JoinProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.JoinProjectResponse.SerializeToString,
        ),
        "LeaveProject": grpc.unary_unary_rpc_method_handler(
            servicer.LeaveProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.LeaveProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.LeaveProjectResponse.SerializeToString,
        ),
        "RemoveMemberFromProject": grpc.unary_unary_rpc_method_handler(
            servicer.RemoveMemberFromProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.RemoveMemberFromProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.RemoveMemberFromProjectResponse.SerializeToString,
        ),
        "CreateProjectCloudProvider": grpc.unary_unary_rpc_method_handler(
            servicer.CreateProjectCloudProvider,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectCloudProviderRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectCloudProviderResponse.SerializeToString,
        ),
        "GetProjectCloudProvider": grpc.unary_unary_rpc_method_handler(
            servicer.GetProjectCloudProvider,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectCloudProviderRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectCloudProviderResponse.SerializeToString,
        ),
        "ListProjectCloudProviders": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectCloudProviders,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProvidersRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProvidersResponse.SerializeToString,
        ),
        "UpdateProjectCloudProvider": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateProjectCloudProvider,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectCloudProviderRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectCloudProviderResponse.SerializeToString,
        ),
        "DeleteProjectCloudProvider": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteProjectCloudProvider,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectCloudProviderRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectCloudProviderResponse.SerializeToString,
        ),
        "ListProjectCloudProviderResources": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectCloudProviderResources,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProviderResourcesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProviderResourcesResponse.SerializeToString,
        ),
        "ImportProjectCloudProviderResource": grpc.unary_unary_rpc_method_handler(
            servicer.ImportProjectCloudProviderResource,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ImportProjectCloudProviderResourceRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ImportProjectCloudProviderResourceResponse.SerializeToString,
        ),
        "GetProjectUsage": grpc.unary_unary_rpc_method_handler(
            servicer.GetProjectUsage,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectUsageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectUsageResponse.SerializeToString,
        ),
        "ListBillingProfileBills": grpc.unary_unary_rpc_method_handler(
            servicer.ListBillingProfileBills,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileBillsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileBillsResponse.SerializeToString,
        ),
        "GetProjectLocks": grpc.unary_unary_rpc_method_handler(
            servicer.GetProjectLocks,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectLocksRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectLocksResponse.SerializeToString,
        ),
        "ListBillingProfileProjects": grpc.unary_unary_rpc_method_handler(
            servicer.ListBillingProfileProjects,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileProjectsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileProjectsResponse.SerializeToString,
        ),
        "GetBillingProfileBillDetails": grpc.unary_unary_rpc_method_handler(
            servicer.GetBillingProfileBillDetails,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillDetailsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillDetailsResponse.SerializeToString,
        ),
        "GetBillingProfileBillPdf": grpc.unary_unary_rpc_method_handler(
            servicer.GetBillingProfileBillPdf,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillPdfRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillPdfResponse.SerializeToString,
        ),
        "ChangeDefaultProject": grpc.unary_unary_rpc_method_handler(
            servicer.ChangeDefaultProject,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeDefaultProjectRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeDefaultProjectResponse.SerializeToString,
        ),
        "ListProjectLogs": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectLogs,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectLogsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectLogsResponse.SerializeToString,
        ),
        "SubscribeNotifications": grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeNotifications,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.SubscribeNotificationsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.SubscribeNotificationsResponse.SerializeToString,
        ),
        "ChangeNodeBillingPeriod": grpc.unary_unary_rpc_method_handler(
            servicer.ChangeNodeBillingPeriod,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeBillingPeriodRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeBillingPeriodResponse.SerializeToString,
        ),
        "ListNodes": grpc.unary_unary_rpc_method_handler(
            servicer.ListNodes,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListNodesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListNodesResponse.SerializeToString,
        ),
        "GetNodeSearchOptions": grpc.unary_unary_rpc_method_handler(
            servicer.GetNodeSearchOptions,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeSearchOptionsRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeSearchOptionsResponse.SerializeToString,
        ),
        "GetNode": grpc.unary_unary_rpc_method_handler(
            servicer.GetNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeResponse.SerializeToString,
        ),
        "CreateNode": grpc.unary_unary_rpc_method_handler(
            servicer.CreateNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateNodeResponse.SerializeToString,
        ),
        "UpdateNode": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateNodeResponse.SerializeToString,
        ),
        "DestroyNode": grpc.unary_unary_rpc_method_handler(
            servicer.DestroyNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DestroyNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DestroyNodeResponse.SerializeToString,
        ),
        "ReinstallNode": grpc.unary_unary_rpc_method_handler(
            servicer.ReinstallNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ReinstallNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ReinstallNodeResponse.SerializeToString,
        ),
        "PowerActionNode": grpc.unary_unary_rpc_method_handler(
            servicer.PowerActionNode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.PowerActionNodeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.PowerActionNodeResponse.SerializeToString,
        ),
        "GetRemoteConsoleAccess": grpc.unary_unary_rpc_method_handler(
            servicer.GetRemoteConsoleAccess,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetRemoteConsoleAccessRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetRemoteConsoleAccessResponse.SerializeToString,
        ),
        "ChangeNodeRescueMode": grpc.unary_unary_rpc_method_handler(
            servicer.ChangeNodeRescueMode,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeRescueModeRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeRescueModeResponse.SerializeToString,
        ),
        "GetUserNodeLimit": grpc.unary_unary_rpc_method_handler(
            servicer.GetUserNodeLimit,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetUserNodeLimitRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetUserNodeLimitResponse.SerializeToString,
        ),
        "ListProjectImages": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectImages,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectImagesRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectImagesResponse.SerializeToString,
        ),
        "GetProjectImage": grpc.unary_unary_rpc_method_handler(
            servicer.GetProjectImage,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectImageResponse.SerializeToString,
        ),
        "CreateProjectImage": grpc.unary_unary_rpc_method_handler(
            servicer.CreateProjectImage,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectImageResponse.SerializeToString,
        ),
        "DeleteProjectImage": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteProjectImage,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageResponse.SerializeToString,
        ),
        "DeleteProjectImageVersion": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteProjectImageVersion,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageVersionRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageVersionResponse.SerializeToString,
        ),
        "ListProjectSSHKeys": grpc.unary_unary_rpc_method_handler(
            servicer.ListProjectSSHKeys,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectSSHKeysRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectSSHKeysResponse.SerializeToString,
        ),
        "ListUserSSHKeys": grpc.unary_unary_rpc_method_handler(
            servicer.ListUserSSHKeys,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListUserSSHKeysRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListUserSSHKeysResponse.SerializeToString,
        ),
        "CreateUserSSHKey": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUserSSHKey,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateUserSSHKeyRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateUserSSHKeyResponse.SerializeToString,
        ),
        "DeleteUserSSHKey": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUserSSHKey,
            request_deserializer=gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteUserSSHKeyRequest.FromString,
            response_serializer=gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteUserSSHKeyResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "gpcore.api.cloud.v1.CloudService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "gpcore.api.cloud.v1.CloudService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class CloudService(object):
    """CloudService provide the basic needs to work with projects and their nodes.
    This is your daily driver to maintain and grow your fleet of nodes. Projects
    group a list of nodes. Every project can have it's own bill. Users can be part
    of one or more projects.
    """

    @staticmethod
    def ListCountries(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListCountries",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListCountriesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListCountriesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListTimezones(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListTimezones",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListTimezonesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListTimezonesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateTimezone(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/UpdateTimezone",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateTimezoneRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateTimezoneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListDatacenters(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListDatacenters",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListDatacentersRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListDatacentersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListPublicImages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListPublicImages",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListPublicImagesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListPublicImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectFlavours(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectFlavours",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectFlavoursRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectFlavoursResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/CreateProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjects(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjects",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/UpdateProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DeleteProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def InviteMemberToProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/InviteMemberToProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.InviteMemberToProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.InviteMemberToProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def JoinProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/JoinProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.JoinProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.JoinProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def LeaveProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/LeaveProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.LeaveProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.LeaveProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RemoveMemberFromProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/RemoveMemberFromProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.RemoveMemberFromProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.RemoveMemberFromProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateProjectCloudProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/CreateProjectCloudProvider",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectCloudProviderRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectCloudProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProjectCloudProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetProjectCloudProvider",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectCloudProviderRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectCloudProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectCloudProviders(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectCloudProviders",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProvidersRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProvidersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateProjectCloudProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/UpdateProjectCloudProvider",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateProjectCloudProviderRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateProjectCloudProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteProjectCloudProvider(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectCloudProvider",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectCloudProviderRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectCloudProviderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectCloudProviderResources(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectCloudProviderResources",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectCloudProviderResourcesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectCloudProviderResourcesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ImportProjectCloudProviderResource(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ImportProjectCloudProviderResource",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ImportProjectCloudProviderResourceRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ImportProjectCloudProviderResourceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProjectUsage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetProjectUsage",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectUsageRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectUsageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListBillingProfileBills(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListBillingProfileBills",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileBillsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileBillsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProjectLocks(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetProjectLocks",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectLocksRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectLocksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListBillingProfileProjects(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListBillingProfileProjects",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListBillingProfileProjectsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListBillingProfileProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetBillingProfileBillDetails(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetBillingProfileBillDetails",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillDetailsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetBillingProfileBillPdf(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetBillingProfileBillPdf",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetBillingProfileBillPdfRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetBillingProfileBillPdfResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ChangeDefaultProject(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ChangeDefaultProject",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeDefaultProjectRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeDefaultProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectLogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectLogs",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectLogsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SubscribeNotifications(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/SubscribeNotifications",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.SubscribeNotificationsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.SubscribeNotificationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ChangeNodeBillingPeriod(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ChangeNodeBillingPeriod",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeBillingPeriodRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeBillingPeriodResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListNodes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListNodes",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListNodesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListNodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetNodeSearchOptions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetNodeSearchOptions",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeSearchOptionsRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeSearchOptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/CreateNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/UpdateNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.UpdateNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.UpdateNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DestroyNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DestroyNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DestroyNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DestroyNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ReinstallNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ReinstallNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ReinstallNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ReinstallNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def PowerActionNode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/PowerActionNode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.PowerActionNodeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.PowerActionNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetRemoteConsoleAccess(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetRemoteConsoleAccess",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetRemoteConsoleAccessRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetRemoteConsoleAccessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ChangeNodeRescueMode(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ChangeNodeRescueMode",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ChangeNodeRescueModeRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ChangeNodeRescueModeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetUserNodeLimit(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetUserNodeLimit",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetUserNodeLimitRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetUserNodeLimitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectImages(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectImages",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectImagesRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetProjectImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/GetProjectImage",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.GetProjectImageRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.GetProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateProjectImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/CreateProjectImage",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateProjectImageRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteProjectImage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectImage",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteProjectImageVersion(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DeleteProjectImageVersion",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteProjectImageVersionRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteProjectImageVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListProjectSSHKeys(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListProjectSSHKeys",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListProjectSSHKeysRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListProjectSSHKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListUserSSHKeys(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/ListUserSSHKeys",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.ListUserSSHKeysRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.ListUserSSHKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateUserSSHKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/CreateUserSSHKey",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.CreateUserSSHKeyRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.CreateUserSSHKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteUserSSHKey(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/gpcore.api.cloud.v1.CloudService/DeleteUserSSHKey",
            gpcore_dot_api_dot_cloud_dot_v1_dot_requests__pb2.DeleteUserSSHKeyRequest.SerializeToString,
            gpcore_dot_api_dot_cloud_dot_v1_dot_responses__pb2.DeleteUserSSHKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
